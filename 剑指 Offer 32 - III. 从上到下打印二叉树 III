/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func levelOrder(root *TreeNode) [][]int {
    if root == nil {
        return nil
    }
    var res [][]int
    var queue []*TreeNode
    queue = append(queue, root)
    flag := true
    for len(queue) > 0 {
        index := len(queue)
        row := make([]int ,index)
        for i := 0; i < index; i++ {
            if flag {
                row[i] = queue[i].Val              
            } else {
                row[i] = queue[index - i - 1].Val

            }
            if queue[i].Left != nil {
				queue = append(queue, queue[i].Left)
			}
		    if queue[i].Right != nil {
			    queue = append(queue, queue[i].Right)
			}
        }
        queue = queue[index: ]
        res = append(res, row)
        flag = !flag
    }
    return res
}