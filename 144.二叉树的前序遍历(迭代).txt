/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        stack<TreeNode*> s;
        vector<int> l;
        if(root==nullptr) {
            return l;
        }
        
        TreeNode* temp = root;
        while(!s.empty() || temp!=nullptr) {
            while(temp != nullptr) {
                l.emplace_back(temp->val);
                s.push(temp);
                temp = temp->left;
            }
            temp = s.top();
            s.pop();
            temp = temp->right; 
        }
        
        return l;
    }
};