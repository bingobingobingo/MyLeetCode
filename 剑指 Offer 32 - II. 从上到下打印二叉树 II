/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func levelOrder(root *TreeNode) [][]int {
    if root == nil {
        return nil
    }
	var res [][]int
	var queue []*TreeNode
	queue = append(queue,root)
	deep := 0
	for len(queue) > 0 {
		temp := queue
		index := len(queue)
		res = append(res,[]int{})
		for len(temp) > 0{
			res[deep] = append(res[deep], temp[0].Val)
			if temp[0].Left != nil {
				queue = append(queue, temp[0].Left)
			}
			if temp[0].Right != nil {
				queue = append(queue, temp[0].Right)
			}
			temp = temp[1: ]
		}
		queue = queue[index:]
		deep++
	}
	return res
}