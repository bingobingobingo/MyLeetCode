func verifyPostorder(postorder []int) bool {
    if postorder == nil || len(postorder) == 0 {
        return true
    }
    root := postorder[len(postorder) - 1]
    index := 0
    for i := 0; i < len(postorder); i++ {
        if postorder[i] >= root {
            index = i
            break
        }
    }

    for i := index; i < len(postorder)-1; i++ {
        if postorder[i] < root {
            return false
        }
    } 
    left := true
    if index > 0 {
        left = verifyPostorder(postorder[: index])
    }
    right := true
    if index < len(postorder) - 1 {
        right = verifyPostorder(postorder[index: len(postorder)-1])
    }
    return left && right
}
//简化
func verifyPostorder(postorder []int) bool {
    if len(postorder) < 2 {
        return true
    }
    i := 0
    j := len(postorder) - 1
    for postorder[i] < postorder[j] {
        i++
    }
    m := i
    for postorder[i] > postorder[j] {
        i++
    }  
    return i == j && verifyPostorder(postorder[0: m]) && verifyPostorder(postorder[m: j])
}